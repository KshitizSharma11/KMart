{"ast":null,"code":"import invariant from'fbjs/lib/invariant';import TaskQueue from\"./TaskQueue\";import EventEmitter from\"../../vendor/react-native/vendor/emitter/EventEmitter\";import requestIdleCallback from\"../../modules/requestIdleCallback\";var _emitter=new EventEmitter();var InteractionManager={Events:{interactionStart:'interactionStart',interactionComplete:'interactionComplete'},runAfterInteractions:function runAfterInteractions(task){var tasks=[];var promise=new Promise(function(resolve){_scheduleUpdate();if(task){tasks.push(task);}tasks.push({run:resolve,name:'resolve '+(task&&task.name||'?')});_taskQueue.enqueueTasks(tasks);});return{then:promise.then.bind(promise),done:promise.then.bind(promise),cancel:function cancel(){_taskQueue.cancelTasks(tasks);}};},createInteractionHandle:function createInteractionHandle(){_scheduleUpdate();var handle=++_inc;_addInteractionSet.add(handle);return handle;},clearInteractionHandle:function clearInteractionHandle(handle){invariant(!!handle,'Must provide a handle to clear.');_scheduleUpdate();_addInteractionSet.delete(handle);_deleteInteractionSet.add(handle);},addListener:_emitter.addListener.bind(_emitter),setDeadline:function setDeadline(deadline){_deadline=deadline;}};var _interactionSet=new Set();var _addInteractionSet=new Set();var _deleteInteractionSet=new Set();var _taskQueue=new TaskQueue({onMoreTasks:_scheduleUpdate});var _nextUpdateHandle=0;var _inc=0;var _deadline=-1;function _scheduleUpdate(){if(!_nextUpdateHandle){if(_deadline>0){_nextUpdateHandle=setTimeout(_processUpdate);}else{_nextUpdateHandle=requestIdleCallback(_processUpdate);}}}function _processUpdate(){_nextUpdateHandle=0;var interactionCount=_interactionSet.size;_addInteractionSet.forEach(function(handle){return _interactionSet.add(handle);});_deleteInteractionSet.forEach(function(handle){return _interactionSet.delete(handle);});var nextInteractionCount=_interactionSet.size;if(interactionCount!==0&&nextInteractionCount===0){_emitter.emit(InteractionManager.Events.interactionComplete);}else if(interactionCount===0&&nextInteractionCount!==0){_emitter.emit(InteractionManager.Events.interactionStart);}if(nextInteractionCount===0){var begin=Date.now();while(_taskQueue.hasTasksToProcess()){_taskQueue.processNext();if(_deadline>0&&Date.now()-begin>=_deadline){_scheduleUpdate();break;}}}_addInteractionSet.clear();_deleteInteractionSet.clear();}export default InteractionManager;","map":{"version":3,"names":["invariant","TaskQueue","EventEmitter","requestIdleCallback","_emitter","InteractionManager","Events","interactionStart","interactionComplete","runAfterInteractions","task","tasks","promise","Promise","resolve","_scheduleUpdate","push","run","name","_taskQueue","enqueueTasks","then","bind","done","cancel","cancelTasks","createInteractionHandle","handle","_inc","_addInteractionSet","add","clearInteractionHandle","delete","_deleteInteractionSet","addListener","setDeadline","deadline","_deadline","_interactionSet","Set","onMoreTasks","_nextUpdateHandle","setTimeout","_processUpdate","interactionCount","size","forEach","nextInteractionCount","emit","begin","Date","now","hasTasksToProcess","processNext","clear"],"sources":["C:/Users/hp/OneDrive/Desktop/react/ecommerce/Ecom/node_modules/react-native-web/dist/exports/InteractionManager/index.js"],"sourcesContent":["/**\n * Copyright (c) Nicolas Gallagher.\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\n\nimport invariant from 'fbjs/lib/invariant';\nimport TaskQueue from './TaskQueue';\nimport EventEmitter from '../../vendor/react-native/vendor/emitter/EventEmitter';\nimport requestIdleCallback from '../../modules/requestIdleCallback';\nvar _emitter = new EventEmitter();\nvar InteractionManager = {\n  Events: {\n    interactionStart: 'interactionStart',\n    interactionComplete: 'interactionComplete'\n  },\n  /**\n   * Schedule a function to run after all interactions have completed.\n   */\n  runAfterInteractions(task) {\n    var tasks = [];\n    var promise = new Promise(resolve => {\n      _scheduleUpdate();\n      if (task) {\n        tasks.push(task);\n      }\n      tasks.push({\n        run: resolve,\n        name: 'resolve ' + (task && task.name || '?')\n      });\n      _taskQueue.enqueueTasks(tasks);\n    });\n    return {\n      then: promise.then.bind(promise),\n      done: promise.then.bind(promise),\n      cancel: () => {\n        _taskQueue.cancelTasks(tasks);\n      }\n    };\n  },\n  /**\n   * Notify manager that an interaction has started.\n   */\n  createInteractionHandle() {\n    _scheduleUpdate();\n    var handle = ++_inc;\n    _addInteractionSet.add(handle);\n    return handle;\n  },\n  /**\n   * Notify manager that an interaction has completed.\n   */\n  clearInteractionHandle(handle) {\n    invariant(!!handle, 'Must provide a handle to clear.');\n    _scheduleUpdate();\n    _addInteractionSet.delete(handle);\n    _deleteInteractionSet.add(handle);\n  },\n  addListener: _emitter.addListener.bind(_emitter),\n  /**\n   *\n   * @param deadline\n   */\n  setDeadline(deadline) {\n    _deadline = deadline;\n  }\n};\nvar _interactionSet = new Set();\nvar _addInteractionSet = new Set();\nvar _deleteInteractionSet = new Set();\nvar _taskQueue = new TaskQueue({\n  onMoreTasks: _scheduleUpdate\n});\nvar _nextUpdateHandle = 0;\nvar _inc = 0;\nvar _deadline = -1;\n\n/**\n * Schedule an asynchronous update to the interaction state.\n */\nfunction _scheduleUpdate() {\n  if (!_nextUpdateHandle) {\n    if (_deadline > 0) {\n      _nextUpdateHandle = setTimeout(_processUpdate);\n    } else {\n      _nextUpdateHandle = requestIdleCallback(_processUpdate);\n    }\n  }\n}\n\n/**\n * Notify listeners, process queue, etc\n */\nfunction _processUpdate() {\n  _nextUpdateHandle = 0;\n  var interactionCount = _interactionSet.size;\n  _addInteractionSet.forEach(handle => _interactionSet.add(handle));\n  _deleteInteractionSet.forEach(handle => _interactionSet.delete(handle));\n  var nextInteractionCount = _interactionSet.size;\n  if (interactionCount !== 0 && nextInteractionCount === 0) {\n    _emitter.emit(InteractionManager.Events.interactionComplete);\n  } else if (interactionCount === 0 && nextInteractionCount !== 0) {\n    _emitter.emit(InteractionManager.Events.interactionStart);\n  }\n  if (nextInteractionCount === 0) {\n    // It seems that we can't know the running time of the current event loop,\n    // we can only calculate the running time of the current task queue.\n    var begin = Date.now();\n    while (_taskQueue.hasTasksToProcess()) {\n      _taskQueue.processNext();\n      if (_deadline > 0 && Date.now() - begin >= _deadline) {\n        _scheduleUpdate();\n        break;\n      }\n    }\n  }\n  _addInteractionSet.clear();\n  _deleteInteractionSet.clear();\n}\nexport default InteractionManager;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}