{"ast":null,"code":"import isUnitlessNumber from\"../unitlessNumbers\";function dangerousStyleValue(name,value,isCustomProperty){var isEmpty=value==null||typeof value==='boolean'||value==='';if(isEmpty){return'';}if(!isCustomProperty&&typeof value==='number'&&value!==0&&!(isUnitlessNumber.hasOwnProperty(name)&&isUnitlessNumber[name])){return value+'px';}return(''+value).trim();}export default dangerousStyleValue;","map":{"version":3,"names":["isUnitlessNumber","dangerousStyleValue","name","value","isCustomProperty","isEmpty","hasOwnProperty","trim"],"sources":["C:/Users/hp/OneDrive/Desktop/react/ecommerce/Ecom/node_modules/react-native-web/dist/modules/setValueForStyles/dangerousStyleValue.js"],"sourcesContent":["/* eslint-disable */\n\n/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * From React 16.0.0\n * \n */\n\nimport isUnitlessNumber from '../unitlessNumbers';\n\n/**\n * Convert a value into the proper css writable value. The style name `name`\n * should be logical (no hyphens), as specified\n * in `CSSProperty.isUnitlessNumber`.\n *\n * @param {string} name CSS property name such as `topMargin`.\n * @param {*} value CSS property value such as `10px`.\n * @return {string} Normalized style value with dimensions applied.\n */\nfunction dangerousStyleValue(name, value, isCustomProperty) {\n  // Note that we've removed escapeTextForBrowser() calls here since the\n  // whole string will be escaped when the attribute is injected into\n  // the markup. If you provide unsafe user data here they can inject\n  // arbitrary CSS which may be problematic (I couldn't repro this):\n  // https://www.owasp.org/index.php/XSS_Filter_Evasion_Cheat_Sheet\n  // http://www.thespanner.co.uk/2007/11/26/ultimate-xss-css-injection/\n  // This is not an XSS hole but instead a potential CSS injection issue\n  // which has lead to a greater discussion about how we're going to\n  // trust URLs moving forward. See #2115901\n\n  var isEmpty = value == null || typeof value === 'boolean' || value === '';\n  if (isEmpty) {\n    return '';\n  }\n  if (!isCustomProperty && typeof value === 'number' && value !== 0 && !(isUnitlessNumber.hasOwnProperty(name) && isUnitlessNumber[name])) {\n    return value + 'px'; // Presumes implicit 'px' suffix for unitless numbers\n  }\n\n  return ('' + value).trim();\n}\nexport default dangerousStyleValue;"],"mappings":"AAYA,MAAO,CAAAA,gBAAgB,0BAWvB,QAAS,CAAAC,mBAAmBA,CAACC,IAAI,CAAEC,KAAK,CAAEC,gBAAgB,CAAE,CAW1D,GAAI,CAAAC,OAAO,CAAGF,KAAK,EAAI,IAAI,EAAI,MAAO,CAAAA,KAAK,GAAK,SAAS,EAAIA,KAAK,GAAK,EAAE,CACzE,GAAIE,OAAO,CAAE,CACX,MAAO,EAAE,CACX,CACA,GAAI,CAACD,gBAAgB,EAAI,MAAO,CAAAD,KAAK,GAAK,QAAQ,EAAIA,KAAK,GAAK,CAAC,EAAI,EAAEH,gBAAgB,CAACM,cAAc,CAACJ,IAAI,CAAC,EAAIF,gBAAgB,CAACE,IAAI,CAAC,CAAC,CAAE,CACvI,MAAO,CAAAC,KAAK,CAAG,IAAI,CACrB,CAEA,MAAO,CAAC,EAAE,CAAGA,KAAK,EAAEI,IAAI,CAAC,CAAC,CAC5B,CACA,cAAe,CAAAN,mBAAmB"},"metadata":{},"sourceType":"module","externalDependencies":[]}