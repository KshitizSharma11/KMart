{"ast":null,"code":"import _asyncToGenerator from\"@babel/runtime/helpers/asyncToGenerator\";import{Asset}from'expo-asset';import{CodedError}from'expo-modules-core';import ExpoFontLoader from\"./ExpoFontLoader\";import{FontDisplay}from\"./Font.types\";function uriFromFontSource(asset){if(typeof asset==='string'){return asset||null;}else if(typeof asset==='object'){return asset.uri||asset.localUri||asset.default||null;}else if(typeof asset==='number'){return uriFromFontSource(Asset.fromModule(asset));}return null;}function displayFromFontSource(asset){return asset.display||FontDisplay.AUTO;}export function fontFamilyNeedsScoping(name){return false;}export function getAssetForSource(source){var uri=uriFromFontSource(source);var display=displayFromFontSource(source);if(!uri||typeof uri!=='string'){throwInvalidSourceError(uri);}return{uri:uri,display:display};}function throwInvalidSourceError(source){var type=typeof source;if(type==='object')type=JSON.stringify(source,null,2);throw new CodedError(`ERR_FONT_SOURCE`,`Expected font asset of type \\`string | FontResource | Asset\\` instead got: ${type}`);}export function loadSingleFontAsync(_x,_x2){return _loadSingleFontAsync.apply(this,arguments);}function _loadSingleFontAsync(){_loadSingleFontAsync=_asyncToGenerator(function*(name,input){if(typeof input!=='object'||typeof input.uri!=='string'||input.downloadAsync){throwInvalidSourceError(input);}yield ExpoFontLoader.loadAsync(name,input);});return _loadSingleFontAsync.apply(this,arguments);}export function getNativeFontName(name){return name;}","map":{"version":3,"names":["Asset","CodedError","ExpoFontLoader","FontDisplay","uriFromFontSource","asset","uri","localUri","default","fromModule","displayFromFontSource","display","AUTO","fontFamilyNeedsScoping","name","getAssetForSource","source","throwInvalidSourceError","type","JSON","stringify","loadSingleFontAsync","_x","_x2","_loadSingleFontAsync","apply","arguments","_asyncToGenerator","input","downloadAsync","loadAsync","getNativeFontName"],"sources":["C:\\Users\\hp\\OneDrive\\Desktop\\react\\ecommerce\\Ecom\\node_modules\\expo-font\\src\\FontLoader.web.ts"],"sourcesContent":["import { Asset } from 'expo-asset';\nimport { CodedError } from 'expo-modules-core';\n\nimport ExpoFontLoader from './ExpoFontLoader';\nimport { FontResource, FontSource, FontDisplay } from './Font.types';\n\nfunction uriFromFontSource(asset: any): string | null {\n  if (typeof asset === 'string') {\n    return asset || null;\n  } else if (typeof asset === 'object') {\n    return asset.uri || asset.localUri || asset.default || null;\n  } else if (typeof asset === 'number') {\n    return uriFromFontSource(Asset.fromModule(asset));\n  }\n  return null;\n}\n\nfunction displayFromFontSource(asset: any): FontDisplay | undefined {\n  return asset.display || FontDisplay.AUTO;\n}\n\nexport function fontFamilyNeedsScoping(name: string): boolean {\n  return false;\n}\n\nexport function getAssetForSource(source: FontSource): Asset | FontResource {\n  const uri = uriFromFontSource(source);\n  const display = displayFromFontSource(source);\n\n  if (!uri || typeof uri !== 'string') {\n    throwInvalidSourceError(uri);\n  }\n\n  return {\n    uri: uri!,\n    display,\n  };\n}\n\nfunction throwInvalidSourceError(source: any): never {\n  let type: string = typeof source;\n  if (type === 'object') type = JSON.stringify(source, null, 2);\n  throw new CodedError(\n    `ERR_FONT_SOURCE`,\n    `Expected font asset of type \\`string | FontResource | Asset\\` instead got: ${type}`\n  );\n}\n\nexport async function loadSingleFontAsync(\n  name: string,\n  input: Asset | FontResource\n): Promise<void> {\n  if (typeof input !== 'object' || typeof input.uri !== 'string' || (input as any).downloadAsync) {\n    throwInvalidSourceError(input);\n  }\n\n  await ExpoFontLoader.loadAsync(name, input);\n}\n\nexport function getNativeFontName(name: string): string {\n  return name;\n}\n"],"mappings":"uEAAA,OAASA,KAAK,KAAQ,YAAY,CAClC,OAASC,UAAU,KAAQ,mBAAmB,CAE9C,MAAO,CAAAC,cAAc,wBACrB,OAAmCC,WAAW,oBAE9C,QAAS,CAAAC,iBAAiBA,CAACC,KAAU,EACnC,GAAI,MAAO,CAAAA,KAAK,GAAK,QAAQ,CAAE,CAC7B,MAAO,CAAAA,KAAK,EAAI,IAAI,C,CACrB,IAAM,IAAI,MAAO,CAAAA,KAAK,GAAK,QAAQ,CAAE,CACpC,MAAO,CAAAA,KAAK,CAACC,GAAG,EAAID,KAAK,CAACE,QAAQ,EAAIF,KAAK,CAACG,OAAO,EAAI,IAAI,C,CAC5D,IAAM,IAAI,MAAO,CAAAH,KAAK,GAAK,QAAQ,CAAE,CACpC,MAAO,CAAAD,iBAAiB,CAACJ,KAAK,CAACS,UAAU,CAACJ,KAAK,CAAC,CAAC,C,CAEnD,MAAO,KAAI,CACb,CAEA,QAAS,CAAAK,qBAAqBA,CAACL,KAAU,EACvC,MAAO,CAAAA,KAAK,CAACM,OAAO,EAAIR,WAAW,CAACS,IAAI,CAC1C,CAEA,MAAM,SAAU,CAAAC,sBAAsBA,CAACC,IAAY,EACjD,MAAO,MAAK,CACd,CAEA,MAAM,SAAU,CAAAC,iBAAiBA,CAACC,MAAkB,EAClD,GAAM,CAAAV,GAAG,CAAGF,iBAAiB,CAACY,MAAM,CAAC,CACrC,GAAM,CAAAL,OAAO,CAAGD,qBAAqB,CAACM,MAAM,CAAC,CAE7C,GAAI,CAACV,GAAG,EAAI,MAAO,CAAAA,GAAG,GAAK,QAAQ,CAAE,CACnCW,uBAAuB,CAACX,GAAG,CAAC,C,CAG9B,MAAO,CACLA,GAAG,CAAEA,GAAI,CACTK,OAAO,CAAPA,O,CACD,CACH,CAEA,QAAS,CAAAM,uBAAuBA,CAACD,MAAW,EAC1C,GAAI,CAAAE,IAAI,CAAW,MAAO,CAAAF,MAAM,CAChC,GAAIE,IAAI,GAAK,QAAQ,CAAEA,IAAI,CAAGC,IAAI,CAACC,SAAS,CAACJ,MAAM,CAAE,IAAI,CAAE,CAAC,CAAC,CAC7D,KAAM,IAAI,CAAAf,UAAU,CAClB,iBAAiB,CACjB,8EAA8EiB,IAAI,EAAE,CACrF,CACH,CAEA,eAAsB,CAAAG,mBAAmBA,CAAAC,EAAA,CAAAC,GAAA,SAAAC,oBAAA,CAAAC,KAAA,MAAAC,SAAA,GASxC,SAAAF,qBAAA,EAAAA,oBAAA,CAAAG,iBAAA,CATM,UACLb,IAAY,CACZc,KAA2B,EAE3B,GAAI,MAAO,CAAAA,KAAK,GAAK,QAAQ,EAAI,MAAO,CAAAA,KAAK,CAACtB,GAAG,GAAK,QAAQ,EAAKsB,KAAa,CAACC,aAAa,CAAE,CAC9FZ,uBAAuB,CAACW,KAAK,CAAC,C,CAGhC,KAAM,CAAA1B,cAAc,CAAC4B,SAAS,CAAChB,IAAI,CAAEc,KAAK,CAAC,CAC7C,CAAC,SAAAJ,oBAAA,CAAAC,KAAA,MAAAC,SAAA,GAED,MAAM,SAAU,CAAAK,iBAAiBA,CAACjB,IAAY,EAC5C,MAAO,CAAAA,IAAI,CACb"},"metadata":{},"sourceType":"module","externalDependencies":[]}