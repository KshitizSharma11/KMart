{"ast":null,"code":"import createIconSet from\"./createIconSet\";export default function(config,expoFontName,expoAssetId){var glyphMap={};config.icons.forEach(function(icon){icon.properties.name.split(/\\s*,\\s*/g).forEach(function(name){glyphMap[name]=icon.properties.code;});});var fontFamily=expoFontName||config.preferences.fontPref.metadata.fontFamily;return createIconSet(glyphMap,fontFamily,expoAssetId||`${fontFamily}.ttf`);}","map":{"version":3,"names":["createIconSet","config","expoFontName","expoAssetId","glyphMap","icons","forEach","icon","properties","name","split","code","fontFamily","preferences","fontPref","metadata"],"sources":["C:\\Users\\hp\\OneDrive\\Desktop\\react\\ecommerce\\Ecom\\node_modules\\@expo\\vector-icons\\src\\createIconSetFromIcoMoon.ts"],"sourcesContent":["import createIconSet from \"./createIconSet\";\n\nexport default function (config, expoFontName, expoAssetId) {\n  const glyphMap = {};\n  config.icons.forEach(icon => {\n    icon.properties.name.split(/\\s*,\\s*/g).forEach(name => {\n      glyphMap[name] = icon.properties.code;\n    });\n  });\n\n  const fontFamily =\n    expoFontName || config.preferences.fontPref.metadata.fontFamily;\n\n  return createIconSet<string, string>(\n    glyphMap,\n    fontFamily,\n    expoAssetId || `${fontFamily}.ttf`\n  );\n}\n"],"mappings":"AAAA,MAAO,CAAAA,aAAa,uBAEpB,cAAc,UAAWC,MAAM,CAAEC,YAAY,CAAEC,WAAW,EACxD,GAAM,CAAAC,QAAQ,CAAG,EAAE,CACnBH,MAAM,CAACI,KAAK,CAACC,OAAO,CAAC,SAAAC,IAAI,CAAG,CAC1BA,IAAI,CAACC,UAAU,CAACC,IAAI,CAACC,KAAK,CAAC,UAAU,CAAC,CAACJ,OAAO,CAAC,SAAAG,IAAI,CAAG,CACpDL,QAAQ,CAACK,IAAI,CAAC,CAAGF,IAAI,CAACC,UAAU,CAACG,IAAI,CACvC,CAAC,CAAC,CACJ,CAAC,CAAC,CAEF,GAAM,CAAAC,UAAU,CACdV,YAAY,EAAID,MAAM,CAACY,WAAW,CAACC,QAAQ,CAACC,QAAQ,CAACH,UAAU,CAEjE,MAAO,CAAAZ,aAAa,CAClBI,QAAQ,CACRQ,UAAU,CACVT,WAAW,EAAI,GAAGS,UAAU,MAAM,CACnC,CACH"},"metadata":{},"sourceType":"module","externalDependencies":[]}