{"ast":null,"code":"'use strict';import PressResponder from\"./PressResponder\";import{useDebugValue,useEffect,useRef}from'react';export default function usePressEvents(hostRef,config){var pressResponderRef=useRef(null);if(pressResponderRef.current==null){pressResponderRef.current=new PressResponder(config);}var pressResponder=pressResponderRef.current;useEffect(function(){pressResponder.configure(config);},[config,pressResponder]);useEffect(function(){return function(){pressResponder.reset();};},[pressResponder]);useDebugValue(config);return pressResponder.getEventHandlers();}","map":{"version":3,"names":["PressResponder","useDebugValue","useEffect","useRef","usePressEvents","hostRef","config","pressResponderRef","current","pressResponder","configure","reset","getEventHandlers"],"sources":["C:/Users/hp/OneDrive/Desktop/react/ecommerce/Ecom/node_modules/react-native-web/dist/modules/usePressEvents/index.js"],"sourcesContent":["/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n */\n\n'use strict';\n\nimport PressResponder from './PressResponder';\nimport { useDebugValue, useEffect, useRef } from 'react';\nexport default function usePressEvents(hostRef, config) {\n  var pressResponderRef = useRef(null);\n  if (pressResponderRef.current == null) {\n    pressResponderRef.current = new PressResponder(config);\n  }\n  var pressResponder = pressResponderRef.current;\n\n  // Re-configure to use the current node and configuration.\n  useEffect(() => {\n    pressResponder.configure(config);\n  }, [config, pressResponder]);\n\n  // Reset the `pressResponder` when cleanup needs to occur. This is\n  // a separate effect because we do not want to rest the responder when `config` changes.\n  useEffect(() => {\n    return () => {\n      pressResponder.reset();\n    };\n  }, [pressResponder]);\n  useDebugValue(config);\n  return pressResponder.getEventHandlers();\n}"],"mappings":"AAUA,YAAY,CAEZ,MAAO,CAAAA,cAAc,wBACrB,OAASC,aAAa,CAAEC,SAAS,CAAEC,MAAM,KAAQ,OAAO,CACxD,cAAe,SAAS,CAAAC,cAAcA,CAACC,OAAO,CAAEC,MAAM,CAAE,CACtD,GAAI,CAAAC,iBAAiB,CAAGJ,MAAM,CAAC,IAAI,CAAC,CACpC,GAAII,iBAAiB,CAACC,OAAO,EAAI,IAAI,CAAE,CACrCD,iBAAiB,CAACC,OAAO,CAAG,GAAI,CAAAR,cAAc,CAACM,MAAM,CAAC,CACxD,CACA,GAAI,CAAAG,cAAc,CAAGF,iBAAiB,CAACC,OAAO,CAG9CN,SAAS,CAAC,UAAM,CACdO,cAAc,CAACC,SAAS,CAACJ,MAAM,CAAC,CAClC,CAAC,CAAE,CAACA,MAAM,CAAEG,cAAc,CAAC,CAAC,CAI5BP,SAAS,CAAC,UAAM,CACd,MAAO,WAAM,CACXO,cAAc,CAACE,KAAK,CAAC,CAAC,CACxB,CAAC,CACH,CAAC,CAAE,CAACF,cAAc,CAAC,CAAC,CACpBR,aAAa,CAACK,MAAM,CAAC,CACrB,MAAO,CAAAG,cAAc,CAACG,gBAAgB,CAAC,CAAC,CAC1C"},"metadata":{},"sourceType":"module","externalDependencies":[]}