{"ast":null,"code":"import createResponderEvent from\"./createResponderEvent\";import{isCancelish,isEndish,isMoveish,isScroll,isSelectionChange,isStartish}from\"./ResponderEventTypes\";import{getLowestCommonAncestor,getResponderPaths,hasTargetTouches,hasValidSelection,isPrimaryPointerDown,setResponderId}from\"./utils\";import{ResponderTouchHistoryStore}from\"./ResponderTouchHistoryStore\";import canUseDOM from\"../canUseDom\";var emptyObject={};var startRegistration=['onStartShouldSetResponderCapture','onStartShouldSetResponder',{bubbles:true}];var moveRegistration=['onMoveShouldSetResponderCapture','onMoveShouldSetResponder',{bubbles:true}];var scrollRegistration=['onScrollShouldSetResponderCapture','onScrollShouldSetResponder',{bubbles:false}];var shouldSetResponderEvents={touchstart:startRegistration,mousedown:startRegistration,touchmove:moveRegistration,mousemove:moveRegistration,scroll:scrollRegistration};var emptyResponder={id:null,idPath:null,node:null};var responderListenersMap=new Map();var isEmulatingMouseEvents=false;var trackedTouchCount=0;var currentResponder={id:null,node:null,idPath:null};var responderTouchHistoryStore=new ResponderTouchHistoryStore();function changeCurrentResponder(responder){currentResponder=responder;}function getResponderConfig(id){var config=responderListenersMap.get(id);return config!=null?config:emptyObject;}function eventListener(domEvent){var eventType=domEvent.type;var eventTarget=domEvent.target;if(eventType==='touchstart'){isEmulatingMouseEvents=true;}if(eventType==='touchmove'||trackedTouchCount>1){isEmulatingMouseEvents=false;}if(eventType==='mousedown'&&isEmulatingMouseEvents||eventType==='mousemove'&&isEmulatingMouseEvents||eventType==='mousemove'&&trackedTouchCount<1){return;}if(isEmulatingMouseEvents&&eventType==='mouseup'){if(trackedTouchCount===0){isEmulatingMouseEvents=false;}return;}var isStartEvent=isStartish(eventType)&&isPrimaryPointerDown(domEvent);var isMoveEvent=isMoveish(eventType);var isEndEvent=isEndish(eventType);var isScrollEvent=isScroll(eventType);var isSelectionChangeEvent=isSelectionChange(eventType);var responderEvent=createResponderEvent(domEvent,responderTouchHistoryStore);if(isStartEvent||isMoveEvent||isEndEvent){if(domEvent.touches){trackedTouchCount=domEvent.touches.length;}else{if(isStartEvent){trackedTouchCount=1;}else if(isEndEvent){trackedTouchCount=0;}}responderTouchHistoryStore.recordTouchTrack(eventType,responderEvent.nativeEvent);}var eventPaths=getResponderPaths(domEvent);var wasNegotiated=false;var wantsResponder;if(isStartEvent||isMoveEvent||isScrollEvent&&trackedTouchCount>0){var currentResponderIdPath=currentResponder.idPath;var eventIdPath=eventPaths.idPath;if(currentResponderIdPath!=null&&eventIdPath!=null){var lowestCommonAncestor=getLowestCommonAncestor(currentResponderIdPath,eventIdPath);if(lowestCommonAncestor!=null){var indexOfLowestCommonAncestor=eventIdPath.indexOf(lowestCommonAncestor);var index=indexOfLowestCommonAncestor+(lowestCommonAncestor===currentResponder.id?1:0);eventPaths={idPath:eventIdPath.slice(index),nodePath:eventPaths.nodePath.slice(index)};}else{eventPaths=null;}}if(eventPaths!=null){wantsResponder=findWantsResponder(eventPaths,domEvent,responderEvent);if(wantsResponder!=null){attemptTransfer(responderEvent,wantsResponder);wasNegotiated=true;}}}if(currentResponder.id!=null&&currentResponder.node!=null){var _currentResponder=currentResponder,id=_currentResponder.id,node=_currentResponder.node;var _getResponderConfig=getResponderConfig(id),onResponderStart=_getResponderConfig.onResponderStart,onResponderMove=_getResponderConfig.onResponderMove,onResponderEnd=_getResponderConfig.onResponderEnd,onResponderRelease=_getResponderConfig.onResponderRelease,onResponderTerminate=_getResponderConfig.onResponderTerminate,onResponderTerminationRequest=_getResponderConfig.onResponderTerminationRequest;responderEvent.bubbles=false;responderEvent.cancelable=false;responderEvent.currentTarget=node;if(isStartEvent){if(onResponderStart!=null){responderEvent.dispatchConfig.registrationName='onResponderStart';onResponderStart(responderEvent);}}else if(isMoveEvent){if(onResponderMove!=null){responderEvent.dispatchConfig.registrationName='onResponderMove';onResponderMove(responderEvent);}}else{var isTerminateEvent=isCancelish(eventType)||eventType==='contextmenu'||eventType==='blur'&&eventTarget===window||eventType==='blur'&&eventTarget.contains(node)&&domEvent.relatedTarget!==node||isScrollEvent&&trackedTouchCount===0||isScrollEvent&&eventTarget.contains(node)&&eventTarget!==node||isSelectionChangeEvent&&hasValidSelection(domEvent);var isReleaseEvent=isEndEvent&&!isTerminateEvent&&!hasTargetTouches(node,domEvent.touches);if(isEndEvent){if(onResponderEnd!=null){responderEvent.dispatchConfig.registrationName='onResponderEnd';onResponderEnd(responderEvent);}}if(isReleaseEvent){if(onResponderRelease!=null){responderEvent.dispatchConfig.registrationName='onResponderRelease';onResponderRelease(responderEvent);}changeCurrentResponder(emptyResponder);}if(isTerminateEvent){var shouldTerminate=true;if(eventType==='contextmenu'||eventType==='scroll'||eventType==='selectionchange'){if(wasNegotiated){shouldTerminate=false;}else if(onResponderTerminationRequest!=null){responderEvent.dispatchConfig.registrationName='onResponderTerminationRequest';if(onResponderTerminationRequest(responderEvent)===false){shouldTerminate=false;}}}if(shouldTerminate){if(onResponderTerminate!=null){responderEvent.dispatchConfig.registrationName='onResponderTerminate';onResponderTerminate(responderEvent);}changeCurrentResponder(emptyResponder);isEmulatingMouseEvents=false;trackedTouchCount=0;}}}}}function findWantsResponder(eventPaths,domEvent,responderEvent){var shouldSetCallbacks=shouldSetResponderEvents[domEvent.type];if(shouldSetCallbacks!=null){var idPath=eventPaths.idPath,nodePath=eventPaths.nodePath;var shouldSetCallbackCaptureName=shouldSetCallbacks[0];var shouldSetCallbackBubbleName=shouldSetCallbacks[1];var bubbles=shouldSetCallbacks[2].bubbles;var check=function check(id,node,callbackName){var config=getResponderConfig(id);var shouldSetCallback=config[callbackName];if(shouldSetCallback!=null){responderEvent.currentTarget=node;if(shouldSetCallback(responderEvent)===true){var prunedIdPath=idPath.slice(idPath.indexOf(id));return{id:id,node:node,idPath:prunedIdPath};}}};for(var i=idPath.length-1;i>=0;i--){var id=idPath[i];var node=nodePath[i];var result=check(id,node,shouldSetCallbackCaptureName);if(result!=null){return result;}if(responderEvent.isPropagationStopped()===true){return;}}if(bubbles){for(var _i=0;_i<idPath.length;_i++){var _id=idPath[_i];var _node=nodePath[_i];var _result=check(_id,_node,shouldSetCallbackBubbleName);if(_result!=null){return _result;}if(responderEvent.isPropagationStopped()===true){return;}}}else{var _id2=idPath[0];var _node2=nodePath[0];var target=domEvent.target;if(target===_node2){return check(_id2,_node2,shouldSetCallbackBubbleName);}}}}function attemptTransfer(responderEvent,wantsResponder){var _currentResponder2=currentResponder,currentId=_currentResponder2.id,currentNode=_currentResponder2.node;var id=wantsResponder.id,node=wantsResponder.node;var _getResponderConfig2=getResponderConfig(id),onResponderGrant=_getResponderConfig2.onResponderGrant,onResponderReject=_getResponderConfig2.onResponderReject;responderEvent.bubbles=false;responderEvent.cancelable=false;responderEvent.currentTarget=node;if(currentId==null){if(onResponderGrant!=null){responderEvent.currentTarget=node;responderEvent.dispatchConfig.registrationName='onResponderGrant';onResponderGrant(responderEvent);}changeCurrentResponder(wantsResponder);}else{var _getResponderConfig3=getResponderConfig(currentId),onResponderTerminate=_getResponderConfig3.onResponderTerminate,onResponderTerminationRequest=_getResponderConfig3.onResponderTerminationRequest;var allowTransfer=true;if(onResponderTerminationRequest!=null){responderEvent.currentTarget=currentNode;responderEvent.dispatchConfig.registrationName='onResponderTerminationRequest';if(onResponderTerminationRequest(responderEvent)===false){allowTransfer=false;}}if(allowTransfer){if(onResponderTerminate!=null){responderEvent.currentTarget=currentNode;responderEvent.dispatchConfig.registrationName='onResponderTerminate';onResponderTerminate(responderEvent);}if(onResponderGrant!=null){responderEvent.currentTarget=node;responderEvent.dispatchConfig.registrationName='onResponderGrant';onResponderGrant(responderEvent);}changeCurrentResponder(wantsResponder);}else{if(onResponderReject!=null){responderEvent.currentTarget=node;responderEvent.dispatchConfig.registrationName='onResponderReject';onResponderReject(responderEvent);}}}}var documentEventsCapturePhase=['blur','scroll'];var documentEventsBubblePhase=['mousedown','mousemove','mouseup','dragstart','touchstart','touchmove','touchend','touchcancel','contextmenu','select','selectionchange'];export function attachListeners(){if(canUseDOM&&window.__reactResponderSystemActive==null){window.addEventListener('blur',eventListener);documentEventsBubblePhase.forEach(function(eventType){document.addEventListener(eventType,eventListener);});documentEventsCapturePhase.forEach(function(eventType){document.addEventListener(eventType,eventListener,true);});window.__reactResponderSystemActive=true;}}export function addNode(id,node,config){setResponderId(node,id);responderListenersMap.set(id,config);}export function removeNode(id){if(currentResponder.id===id){terminateResponder();}if(responderListenersMap.has(id)){responderListenersMap.delete(id);}}export function terminateResponder(){var _currentResponder3=currentResponder,id=_currentResponder3.id,node=_currentResponder3.node;if(id!=null&&node!=null){var _getResponderConfig4=getResponderConfig(id),onResponderTerminate=_getResponderConfig4.onResponderTerminate;if(onResponderTerminate!=null){var event=createResponderEvent({},responderTouchHistoryStore);event.currentTarget=node;onResponderTerminate(event);}changeCurrentResponder(emptyResponder);}isEmulatingMouseEvents=false;trackedTouchCount=0;}export function getResponderNode(){return currentResponder.node;}","map":{"version":3,"names":["createResponderEvent","isCancelish","isEndish","isMoveish","isScroll","isSelectionChange","isStartish","getLowestCommonAncestor","getResponderPaths","hasTargetTouches","hasValidSelection","isPrimaryPointerDown","setResponderId","ResponderTouchHistoryStore","canUseDOM","emptyObject","startRegistration","bubbles","moveRegistration","scrollRegistration","shouldSetResponderEvents","touchstart","mousedown","touchmove","mousemove","scroll","emptyResponder","id","idPath","node","responderListenersMap","Map","isEmulatingMouseEvents","trackedTouchCount","currentResponder","responderTouchHistoryStore","changeCurrentResponder","responder","getResponderConfig","config","get","eventListener","domEvent","eventType","type","eventTarget","target","isStartEvent","isMoveEvent","isEndEvent","isScrollEvent","isSelectionChangeEvent","responderEvent","touches","length","recordTouchTrack","nativeEvent","eventPaths","wasNegotiated","wantsResponder","currentResponderIdPath","eventIdPath","lowestCommonAncestor","indexOfLowestCommonAncestor","indexOf","index","slice","nodePath","findWantsResponder","attemptTransfer","_currentResponder","_getResponderConfig","onResponderStart","onResponderMove","onResponderEnd","onResponderRelease","onResponderTerminate","onResponderTerminationRequest","cancelable","currentTarget","dispatchConfig","registrationName","isTerminateEvent","window","contains","relatedTarget","isReleaseEvent","shouldTerminate","shouldSetCallbacks","shouldSetCallbackCaptureName","shouldSetCallbackBubbleName","check","callbackName","shouldSetCallback","prunedIdPath","i","result","isPropagationStopped","_i","_id","_node","_result","_id2","_node2","_currentResponder2","currentId","currentNode","_getResponderConfig2","onResponderGrant","onResponderReject","_getResponderConfig3","allowTransfer","documentEventsCapturePhase","documentEventsBubblePhase","attachListeners","__reactResponderSystemActive","addEventListener","forEach","document","addNode","set","removeNode","terminateResponder","has","delete","_currentResponder3","_getResponderConfig4","event","getResponderNode"],"sources":["C:/Users/hp/OneDrive/Desktop/react/ecommerce/Ecom/node_modules/react-native-web/dist/modules/useResponderEvents/ResponderSystem.js"],"sourcesContent":["/**\n * Copyright (c) Nicolas Gallagher\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\n\n/**\n * RESPONDER EVENT SYSTEM\n *\n * A single, global \"interaction lock\" on views. For a view to be the \"responder\" means\n * that pointer interactions are exclusive to that view and none other. The \"interaction\n * lock\" can be transferred (only) to ancestors of the current \"responder\" as long as\n * pointers continue to be active.\n *\n * Responder being granted:\n *\n * A view can become the \"responder\" after the following events:\n *  * \"pointerdown\" (implemented using \"touchstart\", \"mousedown\")\n *  * \"pointermove\" (implemented using \"touchmove\", \"mousemove\")\n *  * \"scroll\" (while a pointer is down)\n *  * \"selectionchange\" (while a pointer is down)\n *\n * If nothing is already the \"responder\", the event propagates to (capture) and from\n * (bubble) the event target until a view returns `true` for\n * `on*ShouldSetResponder(Capture)`.\n *\n * If something is already the responder, the event propagates to (capture) and from\n * (bubble) the lowest common ancestor of the event target and the current \"responder\".\n * Then negotiation happens between the current \"responder\" and a view that wants to\n * become the \"responder\": see the timing diagram below.\n *\n * (NOTE: Scrolled views either automatically become the \"responder\" or release the\n * \"interaction lock\". A native scroll view that isn't built on top of the responder\n * system must result in the current \"responder\" being notified that it no longer has\n * the \"interaction lock\" - the native system has taken over.\n *\n * Responder being released:\n *\n * As soon as there are no more active pointers that *started* inside descendants\n * of the *current* \"responder\", an `onResponderRelease` event is dispatched to the\n * current \"responder\", and the responder lock is released.\n *\n * Typical sequence of events:\n *  * startShouldSetResponder\n *  * responderGrant/Reject\n *  * responderStart\n *  * responderMove\n *  * responderEnd\n *  * responderRelease\n */\n\n/*                                             Negotiation Performed\n                                             +-----------------------+\n                                            /                         \\\nProcess low level events to    +     Current Responder      +   wantsResponderID\ndetermine who to perform negot-|   (if any exists at all)   |\niation/transition              | Otherwise just pass through|\n-------------------------------+----------------------------+------------------+\nBubble to find first ID        |                            |\nto return true:wantsResponderID|                            |\n                               |                            |\n     +--------------+          |                            |\n     | onTouchStart |          |                            |\n     +------+-------+    none  |                            |\n            |            return|                            |\n+-----------v-------------+true| +------------------------+ |\n|onStartShouldSetResponder|----->| onResponderStart (cur) |<-----------+\n+-----------+-------------+    | +------------------------+ |          |\n            |                  |                            | +--------+-------+\n            | returned true for|       false:REJECT +-------->|onResponderReject\n            | wantsResponderID |                    |       | +----------------+\n            | (now attempt     | +------------------+-----+ |\n            |  handoff)        | | onResponder            | |\n            +------------------->|    TerminationRequest  | |\n                               | +------------------+-----+ |\n                               |                    |       | +----------------+\n                               |         true:GRANT +-------->|onResponderGrant|\n                               |                            | +--------+-------+\n                               | +------------------------+ |          |\n                               | | onResponderTerminate   |<-----------+\n                               | +------------------+-----+ |\n                               |                    |       | +----------------+\n                               |                    +-------->|onResponderStart|\n                               |                            | +----------------+\nBubble to find first ID        |                            |\nto return true:wantsResponderID|                            |\n                               |                            |\n     +-------------+           |                            |\n     | onTouchMove |           |                            |\n     +------+------+     none  |                            |\n            |            return|                            |\n+-----------v-------------+true| +------------------------+ |\n|onMoveShouldSetResponder |----->| onResponderMove (cur)  |<-----------+\n+-----------+-------------+    | +------------------------+ |          |\n            |                  |                            | +--------+-------+\n            | returned true for|       false:REJECT +-------->|onResponderReject\n            | wantsResponderID |                    |       | +----------------+\n            | (now attempt     | +------------------+-----+ |\n            |  handoff)        | |   onResponder          | |\n            +------------------->|      TerminationRequest| |\n                               | +------------------+-----+ |\n                               |                    |       | +----------------+\n                               |         true:GRANT +-------->|onResponderGrant|\n                               |                            | +--------+-------+\n                               | +------------------------+ |          |\n                               | |   onResponderTerminate |<-----------+\n                               | +------------------+-----+ |\n                               |                    |       | +----------------+\n                               |                    +-------->|onResponderMove |\n                               |                            | +----------------+\n                               |                            |\n                               |                            |\n      Some active touch started|                            |\n      inside current responder | +------------------------+ |\n      +------------------------->|      onResponderEnd    | |\n      |                        | +------------------------+ |\n  +---+---------+              |                            |\n  | onTouchEnd  |              |                            |\n  +---+---------+              |                            |\n      |                        | +------------------------+ |\n      +------------------------->|     onResponderEnd     | |\n      No active touches started| +-----------+------------+ |\n      inside current responder |             |              |\n                               |             v              |\n                               | +------------------------+ |\n                               | |    onResponderRelease  | |\n                               | +------------------------+ |\n                               |                            |\n                               +                            + */\n\nimport createResponderEvent from './createResponderEvent';\nimport { isCancelish, isEndish, isMoveish, isScroll, isSelectionChange, isStartish } from './ResponderEventTypes';\nimport { getLowestCommonAncestor, getResponderPaths, hasTargetTouches, hasValidSelection, isPrimaryPointerDown, setResponderId } from './utils';\nimport { ResponderTouchHistoryStore } from './ResponderTouchHistoryStore';\nimport canUseDOM from '../canUseDom';\n\n/* ------------ TYPES ------------ */\n\nvar emptyObject = {};\n\n/* ------------ IMPLEMENTATION ------------ */\n\nvar startRegistration = ['onStartShouldSetResponderCapture', 'onStartShouldSetResponder', {\n  bubbles: true\n}];\nvar moveRegistration = ['onMoveShouldSetResponderCapture', 'onMoveShouldSetResponder', {\n  bubbles: true\n}];\nvar scrollRegistration = ['onScrollShouldSetResponderCapture', 'onScrollShouldSetResponder', {\n  bubbles: false\n}];\nvar shouldSetResponderEvents = {\n  touchstart: startRegistration,\n  mousedown: startRegistration,\n  touchmove: moveRegistration,\n  mousemove: moveRegistration,\n  scroll: scrollRegistration\n};\nvar emptyResponder = {\n  id: null,\n  idPath: null,\n  node: null\n};\nvar responderListenersMap = new Map();\nvar isEmulatingMouseEvents = false;\nvar trackedTouchCount = 0;\nvar currentResponder = {\n  id: null,\n  node: null,\n  idPath: null\n};\nvar responderTouchHistoryStore = new ResponderTouchHistoryStore();\nfunction changeCurrentResponder(responder) {\n  currentResponder = responder;\n}\nfunction getResponderConfig(id) {\n  var config = responderListenersMap.get(id);\n  return config != null ? config : emptyObject;\n}\n\n/**\n * Process native events\n *\n * A single event listener is used to manage the responder system.\n * All pointers are tracked in the ResponderTouchHistoryStore. Native events\n * are interpreted in terms of the Responder System and checked to see if\n * the responder should be transferred. Each host node that is attached to\n * the Responder System has an ID, which is used to look up its associated\n * callbacks.\n */\nfunction eventListener(domEvent) {\n  var eventType = domEvent.type;\n  var eventTarget = domEvent.target;\n\n  /**\n   * Manage emulated events and early bailout.\n   * Since PointerEvent is not used yet (lack of support in older Safari), it's\n   * necessary to manually manage the mess of browser touch/mouse events.\n   * And bailout early for termination events when there is no active responder.\n   */\n\n  // Flag when browser may produce emulated events\n  if (eventType === 'touchstart') {\n    isEmulatingMouseEvents = true;\n  }\n  // Remove flag when browser will not produce emulated events\n  if (eventType === 'touchmove' || trackedTouchCount > 1) {\n    isEmulatingMouseEvents = false;\n  }\n  // Ignore various events in particular circumstances\n  if (\n  // Ignore browser emulated mouse events\n  eventType === 'mousedown' && isEmulatingMouseEvents || eventType === 'mousemove' && isEmulatingMouseEvents ||\n  // Ignore mousemove if a mousedown didn't occur first\n  eventType === 'mousemove' && trackedTouchCount < 1) {\n    return;\n  }\n  // Remove flag after emulated events are finished\n  if (isEmulatingMouseEvents && eventType === 'mouseup') {\n    if (trackedTouchCount === 0) {\n      isEmulatingMouseEvents = false;\n    }\n    return;\n  }\n  var isStartEvent = isStartish(eventType) && isPrimaryPointerDown(domEvent);\n  var isMoveEvent = isMoveish(eventType);\n  var isEndEvent = isEndish(eventType);\n  var isScrollEvent = isScroll(eventType);\n  var isSelectionChangeEvent = isSelectionChange(eventType);\n  var responderEvent = createResponderEvent(domEvent, responderTouchHistoryStore);\n\n  /**\n   * Record the state of active pointers\n   */\n\n  if (isStartEvent || isMoveEvent || isEndEvent) {\n    if (domEvent.touches) {\n      trackedTouchCount = domEvent.touches.length;\n    } else {\n      if (isStartEvent) {\n        trackedTouchCount = 1;\n      } else if (isEndEvent) {\n        trackedTouchCount = 0;\n      }\n    }\n    responderTouchHistoryStore.recordTouchTrack(eventType, responderEvent.nativeEvent);\n  }\n\n  /**\n   * Responder System logic\n   */\n\n  var eventPaths = getResponderPaths(domEvent);\n  var wasNegotiated = false;\n  var wantsResponder;\n\n  // If an event occured that might change the current responder...\n  if (isStartEvent || isMoveEvent || isScrollEvent && trackedTouchCount > 0) {\n    // If there is already a responder, prune the event paths to the lowest common ancestor\n    // of the existing responder and deepest target of the event.\n    var currentResponderIdPath = currentResponder.idPath;\n    var eventIdPath = eventPaths.idPath;\n    if (currentResponderIdPath != null && eventIdPath != null) {\n      var lowestCommonAncestor = getLowestCommonAncestor(currentResponderIdPath, eventIdPath);\n      if (lowestCommonAncestor != null) {\n        var indexOfLowestCommonAncestor = eventIdPath.indexOf(lowestCommonAncestor);\n        // Skip the current responder so it doesn't receive unexpected \"shouldSet\" events.\n        var index = indexOfLowestCommonAncestor + (lowestCommonAncestor === currentResponder.id ? 1 : 0);\n        eventPaths = {\n          idPath: eventIdPath.slice(index),\n          nodePath: eventPaths.nodePath.slice(index)\n        };\n      } else {\n        eventPaths = null;\n      }\n    }\n    if (eventPaths != null) {\n      // If a node wants to become the responder, attempt to transfer.\n      wantsResponder = findWantsResponder(eventPaths, domEvent, responderEvent);\n      if (wantsResponder != null) {\n        // Sets responder if none exists, or negotates with existing responder.\n        attemptTransfer(responderEvent, wantsResponder);\n        wasNegotiated = true;\n      }\n    }\n  }\n\n  // If there is now a responder, invoke its callbacks for the lifecycle of the gesture.\n  if (currentResponder.id != null && currentResponder.node != null) {\n    var _currentResponder = currentResponder,\n      id = _currentResponder.id,\n      node = _currentResponder.node;\n    var _getResponderConfig = getResponderConfig(id),\n      onResponderStart = _getResponderConfig.onResponderStart,\n      onResponderMove = _getResponderConfig.onResponderMove,\n      onResponderEnd = _getResponderConfig.onResponderEnd,\n      onResponderRelease = _getResponderConfig.onResponderRelease,\n      onResponderTerminate = _getResponderConfig.onResponderTerminate,\n      onResponderTerminationRequest = _getResponderConfig.onResponderTerminationRequest;\n    responderEvent.bubbles = false;\n    responderEvent.cancelable = false;\n    responderEvent.currentTarget = node;\n\n    // Start\n    if (isStartEvent) {\n      if (onResponderStart != null) {\n        responderEvent.dispatchConfig.registrationName = 'onResponderStart';\n        onResponderStart(responderEvent);\n      }\n    }\n    // Move\n    else if (isMoveEvent) {\n      if (onResponderMove != null) {\n        responderEvent.dispatchConfig.registrationName = 'onResponderMove';\n        onResponderMove(responderEvent);\n      }\n    } else {\n      var isTerminateEvent = isCancelish(eventType) ||\n      // native context menu\n      eventType === 'contextmenu' ||\n      // window blur\n      eventType === 'blur' && eventTarget === window ||\n      // responder (or ancestors) blur\n      eventType === 'blur' && eventTarget.contains(node) && domEvent.relatedTarget !== node ||\n      // native scroll without using a pointer\n      isScrollEvent && trackedTouchCount === 0 ||\n      // native scroll on node that is parent of the responder (allow siblings to scroll)\n      isScrollEvent && eventTarget.contains(node) && eventTarget !== node ||\n      // native select/selectionchange on node\n      isSelectionChangeEvent && hasValidSelection(domEvent);\n      var isReleaseEvent = isEndEvent && !isTerminateEvent && !hasTargetTouches(node, domEvent.touches);\n\n      // End\n      if (isEndEvent) {\n        if (onResponderEnd != null) {\n          responderEvent.dispatchConfig.registrationName = 'onResponderEnd';\n          onResponderEnd(responderEvent);\n        }\n      }\n      // Release\n      if (isReleaseEvent) {\n        if (onResponderRelease != null) {\n          responderEvent.dispatchConfig.registrationName = 'onResponderRelease';\n          onResponderRelease(responderEvent);\n        }\n        changeCurrentResponder(emptyResponder);\n      }\n      // Terminate\n      if (isTerminateEvent) {\n        var shouldTerminate = true;\n\n        // Responders can still avoid termination but only for these events.\n        if (eventType === 'contextmenu' || eventType === 'scroll' || eventType === 'selectionchange') {\n          // Only call this function is it wasn't already called during negotiation.\n          if (wasNegotiated) {\n            shouldTerminate = false;\n          } else if (onResponderTerminationRequest != null) {\n            responderEvent.dispatchConfig.registrationName = 'onResponderTerminationRequest';\n            if (onResponderTerminationRequest(responderEvent) === false) {\n              shouldTerminate = false;\n            }\n          }\n        }\n        if (shouldTerminate) {\n          if (onResponderTerminate != null) {\n            responderEvent.dispatchConfig.registrationName = 'onResponderTerminate';\n            onResponderTerminate(responderEvent);\n          }\n          changeCurrentResponder(emptyResponder);\n          isEmulatingMouseEvents = false;\n          trackedTouchCount = 0;\n        }\n      }\n    }\n  }\n}\n\n/**\n * Walk the event path to/from the target node. At each node, stop and call the\n * relevant \"shouldSet\" functions for the given event type. If any of those functions\n * call \"stopPropagation\" on the event, stop searching for a responder.\n */\nfunction findWantsResponder(eventPaths, domEvent, responderEvent) {\n  var shouldSetCallbacks = shouldSetResponderEvents[domEvent.type]; // for Flow\n\n  if (shouldSetCallbacks != null) {\n    var idPath = eventPaths.idPath,\n      nodePath = eventPaths.nodePath;\n    var shouldSetCallbackCaptureName = shouldSetCallbacks[0];\n    var shouldSetCallbackBubbleName = shouldSetCallbacks[1];\n    var bubbles = shouldSetCallbacks[2].bubbles;\n    var check = function check(id, node, callbackName) {\n      var config = getResponderConfig(id);\n      var shouldSetCallback = config[callbackName];\n      if (shouldSetCallback != null) {\n        responderEvent.currentTarget = node;\n        if (shouldSetCallback(responderEvent) === true) {\n          // Start the path from the potential responder\n          var prunedIdPath = idPath.slice(idPath.indexOf(id));\n          return {\n            id,\n            node,\n            idPath: prunedIdPath\n          };\n        }\n      }\n    };\n\n    // capture\n    for (var i = idPath.length - 1; i >= 0; i--) {\n      var id = idPath[i];\n      var node = nodePath[i];\n      var result = check(id, node, shouldSetCallbackCaptureName);\n      if (result != null) {\n        return result;\n      }\n      if (responderEvent.isPropagationStopped() === true) {\n        return;\n      }\n    }\n\n    // bubble\n    if (bubbles) {\n      for (var _i = 0; _i < idPath.length; _i++) {\n        var _id = idPath[_i];\n        var _node = nodePath[_i];\n        var _result = check(_id, _node, shouldSetCallbackBubbleName);\n        if (_result != null) {\n          return _result;\n        }\n        if (responderEvent.isPropagationStopped() === true) {\n          return;\n        }\n      }\n    } else {\n      var _id2 = idPath[0];\n      var _node2 = nodePath[0];\n      var target = domEvent.target;\n      if (target === _node2) {\n        return check(_id2, _node2, shouldSetCallbackBubbleName);\n      }\n    }\n  }\n}\n\n/**\n * Attempt to transfer the responder.\n */\nfunction attemptTransfer(responderEvent, wantsResponder) {\n  var _currentResponder2 = currentResponder,\n    currentId = _currentResponder2.id,\n    currentNode = _currentResponder2.node;\n  var id = wantsResponder.id,\n    node = wantsResponder.node;\n  var _getResponderConfig2 = getResponderConfig(id),\n    onResponderGrant = _getResponderConfig2.onResponderGrant,\n    onResponderReject = _getResponderConfig2.onResponderReject;\n  responderEvent.bubbles = false;\n  responderEvent.cancelable = false;\n  responderEvent.currentTarget = node;\n\n  // Set responder\n  if (currentId == null) {\n    if (onResponderGrant != null) {\n      responderEvent.currentTarget = node;\n      responderEvent.dispatchConfig.registrationName = 'onResponderGrant';\n      onResponderGrant(responderEvent);\n    }\n    changeCurrentResponder(wantsResponder);\n  }\n  // Negotiate with current responder\n  else {\n    var _getResponderConfig3 = getResponderConfig(currentId),\n      onResponderTerminate = _getResponderConfig3.onResponderTerminate,\n      onResponderTerminationRequest = _getResponderConfig3.onResponderTerminationRequest;\n    var allowTransfer = true;\n    if (onResponderTerminationRequest != null) {\n      responderEvent.currentTarget = currentNode;\n      responderEvent.dispatchConfig.registrationName = 'onResponderTerminationRequest';\n      if (onResponderTerminationRequest(responderEvent) === false) {\n        allowTransfer = false;\n      }\n    }\n    if (allowTransfer) {\n      // Terminate existing responder\n      if (onResponderTerminate != null) {\n        responderEvent.currentTarget = currentNode;\n        responderEvent.dispatchConfig.registrationName = 'onResponderTerminate';\n        onResponderTerminate(responderEvent);\n      }\n      // Grant next responder\n      if (onResponderGrant != null) {\n        responderEvent.currentTarget = node;\n        responderEvent.dispatchConfig.registrationName = 'onResponderGrant';\n        onResponderGrant(responderEvent);\n      }\n      changeCurrentResponder(wantsResponder);\n    } else {\n      // Reject responder request\n      if (onResponderReject != null) {\n        responderEvent.currentTarget = node;\n        responderEvent.dispatchConfig.registrationName = 'onResponderReject';\n        onResponderReject(responderEvent);\n      }\n    }\n  }\n}\n\n/* ------------ PUBLIC API ------------ */\n\n/**\n * Attach Listeners\n *\n * Use native events as ReactDOM doesn't have a non-plugin API to implement\n * this system.\n */\nvar documentEventsCapturePhase = ['blur', 'scroll'];\nvar documentEventsBubblePhase = [\n// mouse\n'mousedown', 'mousemove', 'mouseup', 'dragstart',\n// touch\n'touchstart', 'touchmove', 'touchend', 'touchcancel',\n// other\n'contextmenu', 'select', 'selectionchange'];\nexport function attachListeners() {\n  if (canUseDOM && window.__reactResponderSystemActive == null) {\n    window.addEventListener('blur', eventListener);\n    documentEventsBubblePhase.forEach(eventType => {\n      document.addEventListener(eventType, eventListener);\n    });\n    documentEventsCapturePhase.forEach(eventType => {\n      document.addEventListener(eventType, eventListener, true);\n    });\n    window.__reactResponderSystemActive = true;\n  }\n}\n\n/**\n * Register a node with the ResponderSystem.\n */\nexport function addNode(id, node, config) {\n  setResponderId(node, id);\n  responderListenersMap.set(id, config);\n}\n\n/**\n * Unregister a node with the ResponderSystem.\n */\nexport function removeNode(id) {\n  if (currentResponder.id === id) {\n    terminateResponder();\n  }\n  if (responderListenersMap.has(id)) {\n    responderListenersMap.delete(id);\n  }\n}\n\n/**\n * Allow the current responder to be terminated from within components to support\n * more complex requirements, such as use with other React libraries for working\n * with scroll views, input views, etc.\n */\nexport function terminateResponder() {\n  var _currentResponder3 = currentResponder,\n    id = _currentResponder3.id,\n    node = _currentResponder3.node;\n  if (id != null && node != null) {\n    var _getResponderConfig4 = getResponderConfig(id),\n      onResponderTerminate = _getResponderConfig4.onResponderTerminate;\n    if (onResponderTerminate != null) {\n      var event = createResponderEvent({}, responderTouchHistoryStore);\n      event.currentTarget = node;\n      onResponderTerminate(event);\n    }\n    changeCurrentResponder(emptyResponder);\n  }\n  isEmulatingMouseEvents = false;\n  trackedTouchCount = 0;\n}\n\n/**\n * Allow unit tests to inspect the current responder in the system.\n * FOR TESTING ONLY.\n */\nexport function getResponderNode() {\n  return currentResponder.node;\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}