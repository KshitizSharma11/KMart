{"ast":null,"code":"var rtlScripts=new Set(['Arab','Syrc','Samr','Mand','Thaa','Mend','Nkoo','Adlm','Rohg','Hebr']);var rtlLangs=new Set(['ae','ar','arc','bcc','bqi','ckb','dv','fa','far','glk','he','iw','khw','ks','ku','mzn','nqo','pnb','ps','sd','ug','ur','yi']);var cache=new Map();export function isLocaleRTL(locale){var cachedRTL=cache.get(locale);if(cachedRTL){return cachedRTL;}var isRTL=false;if(Intl.Locale){var script=new Intl.Locale(locale).maximize().script;isRTL=rtlScripts.has(script);}else{var lang=locale.split('-')[0];isRTL=rtlLangs.has(lang);}cache.set(locale,isRTL);return isRTL;}","map":{"version":3,"names":["rtlScripts","Set","rtlLangs","cache","Map","isLocaleRTL","locale","cachedRTL","get","isRTL","Intl","Locale","script","maximize","has","lang","split","set"],"sources":["C:/Users/hp/OneDrive/Desktop/react/ecommerce/Ecom/node_modules/react-native-web/dist/modules/useLocale/isLocaleRTL.js"],"sourcesContent":["/**\n * Copyright (c) Nicolas Gallagher.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\n\nvar rtlScripts = new Set(['Arab', 'Syrc', 'Samr', 'Mand', 'Thaa', 'Mend', 'Nkoo', 'Adlm', 'Rohg', 'Hebr']);\nvar rtlLangs = new Set(['ae',\n// Avestan\n'ar',\n// Arabic\n'arc',\n// Aramaic\n'bcc',\n// Southern Balochi\n'bqi',\n// Bakthiari\n'ckb',\n// Sorani\n'dv',\n// Dhivehi\n'fa', 'far',\n// Persian\n'glk',\n// Gilaki\n'he', 'iw',\n// Hebrew\n'khw',\n// Khowar\n'ks',\n// Kashmiri\n'ku',\n// Kurdish\n'mzn',\n// Mazanderani\n'nqo',\n// N'Ko\n'pnb',\n// Western Punjabi\n'ps',\n// Pashto\n'sd',\n// Sindhi\n'ug',\n// Uyghur\n'ur',\n// Urdu\n'yi' // Yiddish\n]);\n\nvar cache = new Map();\n\n/**\n * Determine the writing direction of a locale\n */\nexport function isLocaleRTL(locale) {\n  var cachedRTL = cache.get(locale);\n  if (cachedRTL) {\n    return cachedRTL;\n  }\n  var isRTL = false;\n  // $FlowFixMe\n  if (Intl.Locale) {\n    // $FlowFixMe\n    var script = new Intl.Locale(locale).maximize().script;\n    isRTL = rtlScripts.has(script);\n  } else {\n    // Fallback to inferring from language\n    var lang = locale.split('-')[0];\n    isRTL = rtlLangs.has(lang);\n  }\n  cache.set(locale, isRTL);\n  return isRTL;\n}"],"mappings":"AASA,GAAI,CAAAA,UAAU,CAAG,GAAI,CAAAC,GAAG,CAAC,CAAC,MAAM,CAAE,MAAM,CAAE,MAAM,CAAE,MAAM,CAAE,MAAM,CAAE,MAAM,CAAE,MAAM,CAAE,MAAM,CAAE,MAAM,CAAE,MAAM,CAAC,CAAC,CAC1G,GAAI,CAAAC,QAAQ,CAAG,GAAI,CAAAD,GAAG,CAAC,CAAC,IAAI,CAE5B,IAAI,CAEJ,KAAK,CAEL,KAAK,CAEL,KAAK,CAEL,KAAK,CAEL,IAAI,CAEJ,IAAI,CAAE,KAAK,CAEX,KAAK,CAEL,IAAI,CAAE,IAAI,CAEV,KAAK,CAEL,IAAI,CAEJ,IAAI,CAEJ,KAAK,CAEL,KAAK,CAEL,KAAK,CAEL,IAAI,CAEJ,IAAI,CAEJ,IAAI,CAEJ,IAAI,CAEJ,IAAI,CACH,CAAC,CAEF,GAAI,CAAAE,KAAK,CAAG,GAAI,CAAAC,GAAG,CAAC,CAAC,CAKrB,MAAO,SAAS,CAAAC,WAAWA,CAACC,MAAM,CAAE,CAClC,GAAI,CAAAC,SAAS,CAAGJ,KAAK,CAACK,GAAG,CAACF,MAAM,CAAC,CACjC,GAAIC,SAAS,CAAE,CACb,MAAO,CAAAA,SAAS,CAClB,CACA,GAAI,CAAAE,KAAK,CAAG,KAAK,CAEjB,GAAIC,IAAI,CAACC,MAAM,CAAE,CAEf,GAAI,CAAAC,MAAM,CAAG,GAAI,CAAAF,IAAI,CAACC,MAAM,CAACL,MAAM,CAAC,CAACO,QAAQ,CAAC,CAAC,CAACD,MAAM,CACtDH,KAAK,CAAGT,UAAU,CAACc,GAAG,CAACF,MAAM,CAAC,CAChC,CAAC,IAAM,CAEL,GAAI,CAAAG,IAAI,CAAGT,MAAM,CAACU,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAC/BP,KAAK,CAAGP,QAAQ,CAACY,GAAG,CAACC,IAAI,CAAC,CAC5B,CACAZ,KAAK,CAACc,GAAG,CAACX,MAAM,CAAEG,KAAK,CAAC,CACxB,MAAO,CAAAA,KAAK,CACd"},"metadata":{},"sourceType":"module","externalDependencies":[]}