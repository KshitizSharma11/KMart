{"ast":null,"code":"var slice=Array.prototype.slice;export default function createOrderedCSSStyleSheet(sheet){var groups={};var selectors={};if(sheet!=null){var group;slice.call(sheet.cssRules).forEach(function(cssRule,i){var cssText=cssRule.cssText;if(cssText.indexOf('stylesheet-group')>-1){group=decodeGroupRule(cssRule);groups[group]={start:i,rules:[cssText]};}else{var selectorText=getSelectorText(cssText);if(selectorText!=null){selectors[selectorText]=true;groups[group].rules.push(cssText);}}});}function sheetInsert(sheet,group,text){var orderedGroups=getOrderedGroups(groups);var groupIndex=orderedGroups.indexOf(group);var nextGroupIndex=groupIndex+1;var nextGroup=orderedGroups[nextGroupIndex];var position=nextGroup!=null&&groups[nextGroup].start!=null?groups[nextGroup].start:sheet.cssRules.length;var isInserted=insertRuleAt(sheet,text,position);if(isInserted){if(groups[group].start==null){groups[group].start=position;}for(var i=nextGroupIndex;i<orderedGroups.length;i+=1){var groupNumber=orderedGroups[i];var previousStart=groups[groupNumber].start||0;groups[groupNumber].start=previousStart+1;}}return isInserted;}var OrderedCSSStyleSheet={getTextContent:function getTextContent(){return getOrderedGroups(groups).map(function(group){var rules=groups[group].rules;var marker=rules.shift();rules.sort();rules.unshift(marker);return rules.join('\\n');}).join('\\n');},insert:function insert(cssText,groupValue){var group=Number(groupValue);if(groups[group]==null){var markerRule=encodeGroupRule(group);groups[group]={start:null,rules:[markerRule]};if(sheet!=null){sheetInsert(sheet,group,markerRule);}}var selectorText=getSelectorText(cssText);if(selectorText!=null&&selectors[selectorText]==null){selectors[selectorText]=true;groups[group].rules.push(cssText);if(sheet!=null){var isInserted=sheetInsert(sheet,group,cssText);if(!isInserted){groups[group].rules.pop();}}}}};return OrderedCSSStyleSheet;}function encodeGroupRule(group){return\"[stylesheet-group=\\\"\"+group+\"\\\"]{}\";}var groupPattern=/[\"']/g;function decodeGroupRule(cssRule){return Number(cssRule.selectorText.split(groupPattern)[1]);}function getOrderedGroups(obj){return Object.keys(obj).map(Number).sort(function(a,b){return a>b?1:-1;});}var selectorPattern=/\\s*([,])\\s*/g;function getSelectorText(cssText){var selector=cssText.split('{')[0].trim();return selector!==''?selector.replace(selectorPattern,'$1'):null;}function insertRuleAt(root,cssText,position){try{root.insertRule(cssText,position);return true;}catch(e){return false;}}","map":{"version":3,"names":["slice","Array","prototype","createOrderedCSSStyleSheet","sheet","groups","selectors","group","call","cssRules","forEach","cssRule","i","cssText","indexOf","decodeGroupRule","start","rules","selectorText","getSelectorText","push","sheetInsert","text","orderedGroups","getOrderedGroups","groupIndex","nextGroupIndex","nextGroup","position","length","isInserted","insertRuleAt","groupNumber","previousStart","OrderedCSSStyleSheet","getTextContent","map","marker","shift","sort","unshift","join","insert","groupValue","Number","markerRule","encodeGroupRule","pop","groupPattern","split","obj","Object","keys","a","b","selectorPattern","selector","trim","replace","root","insertRule","e"],"sources":["C:/Users/hp/OneDrive/Desktop/react/ecommerce/Ecom/node_modules/react-native-web/dist/exports/StyleSheet/dom/createOrderedCSSStyleSheet.js"],"sourcesContent":["/**\n * Copyright (c) Nicolas Gallagher.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\n\nvar slice = Array.prototype.slice;\n\n/**\n * Order-based insertion of CSS.\n *\n * Each rule is associated with a numerically defined group.\n * Groups are ordered within the style sheet according to their number, with the\n * lowest first.\n *\n * Groups are implemented using marker rules. The selector of the first rule of\n * each group is used only to encode the group number for hydration. An\n * alternative implementation could rely on CSSMediaRule, allowing groups to be\n * treated as a sub-sheet, but the Edge implementation of CSSMediaRule is\n * broken.\n * https://developer.mozilla.org/en-US/docs/Web/API/CSSMediaRule\n * https://gist.github.com/necolas/aa0c37846ad6bd3b05b727b959e82674\n */\nexport default function createOrderedCSSStyleSheet(sheet) {\n  var groups = {};\n  var selectors = {};\n\n  /**\n   * Hydrate approximate record from any existing rules in the sheet.\n   */\n  if (sheet != null) {\n    var group;\n    slice.call(sheet.cssRules).forEach((cssRule, i) => {\n      var cssText = cssRule.cssText;\n      // Create record of existing selectors and rules\n      if (cssText.indexOf('stylesheet-group') > -1) {\n        group = decodeGroupRule(cssRule);\n        groups[group] = {\n          start: i,\n          rules: [cssText]\n        };\n      } else {\n        var selectorText = getSelectorText(cssText);\n        if (selectorText != null) {\n          selectors[selectorText] = true;\n          groups[group].rules.push(cssText);\n        }\n      }\n    });\n  }\n  function sheetInsert(sheet, group, text) {\n    var orderedGroups = getOrderedGroups(groups);\n    var groupIndex = orderedGroups.indexOf(group);\n    var nextGroupIndex = groupIndex + 1;\n    var nextGroup = orderedGroups[nextGroupIndex];\n    // Insert rule before the next group, or at the end of the stylesheet\n    var position = nextGroup != null && groups[nextGroup].start != null ? groups[nextGroup].start : sheet.cssRules.length;\n    var isInserted = insertRuleAt(sheet, text, position);\n    if (isInserted) {\n      // Set the starting index of the new group\n      if (groups[group].start == null) {\n        groups[group].start = position;\n      }\n      // Increment the starting index of all subsequent groups\n      for (var i = nextGroupIndex; i < orderedGroups.length; i += 1) {\n        var groupNumber = orderedGroups[i];\n        var previousStart = groups[groupNumber].start || 0;\n        groups[groupNumber].start = previousStart + 1;\n      }\n    }\n    return isInserted;\n  }\n  var OrderedCSSStyleSheet = {\n    /**\n     * The textContent of the style sheet.\n     */\n    getTextContent() {\n      return getOrderedGroups(groups).map(group => {\n        var rules = groups[group].rules;\n        // Sorting provides deterministic order of styles in group for\n        // build-time extraction of the style sheet.\n        var marker = rules.shift();\n        rules.sort();\n        rules.unshift(marker);\n        return rules.join('\\n');\n      }).join('\\n');\n    },\n    /**\n     * Insert a rule into the style sheet\n     */\n    insert(cssText, groupValue) {\n      var group = Number(groupValue);\n\n      // Create a new group.\n      if (groups[group] == null) {\n        var markerRule = encodeGroupRule(group);\n        // Create the internal record.\n        groups[group] = {\n          start: null,\n          rules: [markerRule]\n        };\n        // Update CSSOM.\n        if (sheet != null) {\n          sheetInsert(sheet, group, markerRule);\n        }\n      }\n\n      // selectorText is more reliable than cssText for insertion checks. The\n      // browser excludes vendor-prefixed properties and rewrites certain values\n      // making cssText more likely to be different from what was inserted.\n      var selectorText = getSelectorText(cssText);\n      if (selectorText != null && selectors[selectorText] == null) {\n        // Update the internal records.\n        selectors[selectorText] = true;\n        groups[group].rules.push(cssText);\n        // Update CSSOM.\n        if (sheet != null) {\n          var isInserted = sheetInsert(sheet, group, cssText);\n          if (!isInserted) {\n            // Revert internal record change if a rule was rejected (e.g.,\n            // unrecognized pseudo-selector)\n            groups[group].rules.pop();\n          }\n        }\n      }\n    }\n  };\n  return OrderedCSSStyleSheet;\n}\n\n/**\n * Helper functions\n */\n\nfunction encodeGroupRule(group) {\n  return \"[stylesheet-group=\\\"\" + group + \"\\\"]{}\";\n}\nvar groupPattern = /[\"']/g;\nfunction decodeGroupRule(cssRule) {\n  return Number(cssRule.selectorText.split(groupPattern)[1]);\n}\nfunction getOrderedGroups(obj) {\n  return Object.keys(obj).map(Number).sort((a, b) => a > b ? 1 : -1);\n}\nvar selectorPattern = /\\s*([,])\\s*/g;\nfunction getSelectorText(cssText) {\n  var selector = cssText.split('{')[0].trim();\n  return selector !== '' ? selector.replace(selectorPattern, '$1') : null;\n}\nfunction insertRuleAt(root, cssText, position) {\n  try {\n    // $FlowFixMe: Flow is missing CSSOM types needed to type 'root'.\n    root.insertRule(cssText, position);\n    return true;\n  } catch (e) {\n    // JSDOM doesn't support `CSSSMediaRule#insertRule`.\n    // Also ignore errors that occur from attempting to insert vendor-prefixed selectors.\n    return false;\n  }\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}