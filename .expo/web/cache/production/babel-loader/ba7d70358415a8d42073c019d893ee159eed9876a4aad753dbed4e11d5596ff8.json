{"ast":null,"code":"import _defineProperty from\"@babel/runtime/helpers/defineProperty\";function ownKeys(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);r&&(o=o.filter(function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable;})),t.push.apply(t,o);}return t;}function _objectSpread(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?ownKeys(Object(t),!0).forEach(function(r){_defineProperty(e,r,t[r]);}):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):ownKeys(Object(t)).forEach(function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r));});}return e;}import{Platform}from'expo-modules-core';import path from'path-browserify';import PixelRatio from\"react-native-web/dist/exports/PixelRatio\";import URL from'url-parse';import AssetSourceResolver from\"./AssetSourceResolver\";import{getManifest,getManifest2,manifestBaseUrl}from\"./PlatformUtils\";var assetMapOverride=getManifest().assetMapOverride;export function selectAssetSource(meta){var _manifest2$extra,_manifest2$extra$expo;if(assetMapOverride&&assetMapOverride.hasOwnProperty(meta.hash)){meta=_objectSpread(_objectSpread({},meta),assetMapOverride[meta.hash]);}var scale=AssetSourceResolver.pickScale(meta.scales,PixelRatio.get());var index=meta.scales.findIndex(function(s){return s===scale;});var hash=meta.fileHashes?meta.fileHashes[index]||meta.fileHashes[0]:meta.hash;var uri=meta.fileUris?meta.fileUris[index]||meta.fileUris[0]:meta.uri;if(uri){return{uri:resolveUri(uri),hash:hash};}var assetUrlOverride=getManifest().assetUrlOverride;if(assetUrlOverride){var _uri=path.join(assetUrlOverride,hash);return{uri:resolveUri(_uri),hash:hash};}var fileScale=scale===1?'':`@${scale}x`;var fileExtension=meta.type?`.${encodeURIComponent(meta.type)}`:'';var suffix=`/${encodeURIComponent(meta.name)}${fileScale}${fileExtension}?platform=${encodeURIComponent(Platform.OS)}&hash=${encodeURIComponent(meta.hash)}`;if(/^https?:\\/\\//.test(meta.httpServerLocation)){var _uri2=meta.httpServerLocation+suffix;return{uri:_uri2,hash:hash};}var manifest2=getManifest2();if(manifest2!=null&&(_manifest2$extra=manifest2.extra)!=null&&(_manifest2$extra$expo=_manifest2$extra.expoGo)!=null&&_manifest2$extra$expo.developer){var baseUrl=new URL(`http://${manifest2.extra.expoGo.debuggerHost}`);baseUrl.set('pathname',meta.httpServerLocation+suffix);return{uri:baseUrl.href,hash:hash};}if(getManifest().developer){var _baseUrl=new URL(getManifest().bundleUrl);_baseUrl.set('pathname',meta.httpServerLocation+suffix);return{uri:_baseUrl.href,hash:hash};}return{uri:`https://classic-assets.eascdn.net/~assets/${encodeURIComponent(hash)}`,hash:hash};}export function resolveUri(uri){if(!manifestBaseUrl){return uri;}var _URL=new URL(uri),protocol=_URL.protocol;if(protocol!==''){return uri;}var baseUrl=new URL(manifestBaseUrl);var resolvedPath=uri.startsWith('/')?uri:path.join(baseUrl.pathname,uri);baseUrl.set('pathname',resolvedPath);return baseUrl.href;}","map":{"version":3,"names":["Platform","path","PixelRatio","URL","AssetSourceResolver","getManifest","getManifest2","manifestBaseUrl","assetMapOverride","selectAssetSource","meta","_manifest2$extra","_manifest2$extra$expo","hasOwnProperty","hash","_objectSpread","scale","pickScale","scales","get","index","findIndex","s","fileHashes","uri","fileUris","resolveUri","assetUrlOverride","join","fileScale","fileExtension","type","encodeURIComponent","suffix","name","OS","test","httpServerLocation","manifest2","extra","expoGo","developer","baseUrl","debuggerHost","set","href","bundleUrl","_URL","protocol","resolvedPath","startsWith","pathname"],"sources":["C:\\Users\\hp\\OneDrive\\Desktop\\react\\ecommerce\\Ecom\\node_modules\\expo-asset\\src\\AssetSources.ts"],"sourcesContent":["import { Platform } from 'expo-modules-core';\nimport path from 'path-browserify';\nimport { PixelRatio } from 'react-native';\nimport { PackagerAsset } from 'react-native/Libraries/Image/AssetRegistry';\nimport URL from 'url-parse';\n\nimport AssetSourceResolver from './AssetSourceResolver';\nimport { getManifest, getManifest2, manifestBaseUrl } from './PlatformUtils';\n\n// @docsMissing\nexport type AssetMetadata = Pick<\n  PackagerAsset,\n  'httpServerLocation' | 'name' | 'hash' | 'type' | 'scales' | 'width' | 'height'\n> & {\n  uri?: string;\n  fileHashes?: string[];\n  fileUris?: string[];\n};\n\nexport type AssetSource = {\n  uri: string;\n  hash: string;\n};\n\n// Fast lookup check if asset map has any overrides in the manifest\nconst assetMapOverride = getManifest().assetMapOverride;\n\n/**\n * Selects the best file for the given asset (ex: choosing the best scale for images) and returns\n * a { uri, hash } pair for the specific asset file.\n *\n * If the asset isn't an image with multiple scales, the first file is selected.\n */\nexport function selectAssetSource(meta: AssetMetadata): AssetSource {\n  // Override with the asset map in manifest if available\n  if (assetMapOverride && assetMapOverride.hasOwnProperty(meta.hash)) {\n    meta = { ...meta, ...assetMapOverride[meta.hash] };\n  }\n\n  // This logic is based on that of AssetSourceResolver, with additional support for file hashes and\n  // explicitly provided URIs\n  const scale = AssetSourceResolver.pickScale(meta.scales, PixelRatio.get());\n  const index = meta.scales.findIndex((s) => s === scale);\n  const hash = meta.fileHashes ? meta.fileHashes[index] || meta.fileHashes[0] : meta.hash;\n\n  // Allow asset processors to directly provide the URL to load\n  const uri = meta.fileUris ? meta.fileUris[index] || meta.fileUris[0] : meta.uri;\n  if (uri) {\n    return { uri: resolveUri(uri), hash };\n  }\n\n  // Check if the assetUrl was overridden in the manifest\n  const assetUrlOverride = getManifest().assetUrlOverride;\n  if (assetUrlOverride) {\n    const uri = path.join(assetUrlOverride, hash);\n    return { uri: resolveUri(uri), hash };\n  }\n\n  const fileScale = scale === 1 ? '' : `@${scale}x`;\n  const fileExtension = meta.type ? `.${encodeURIComponent(meta.type)}` : '';\n  const suffix = `/${encodeURIComponent(\n    meta.name\n  )}${fileScale}${fileExtension}?platform=${encodeURIComponent(\n    Platform.OS\n  )}&hash=${encodeURIComponent(meta.hash)}`;\n\n  // For assets with a specified absolute URL, we use the existing origin instead of prepending the\n  // development server or production CDN URL origin\n  if (/^https?:\\/\\//.test(meta.httpServerLocation)) {\n    const uri = meta.httpServerLocation + suffix;\n    return { uri, hash };\n  }\n\n  // For assets during development using manifest2, we use the development server's URL origin\n  const manifest2 = getManifest2();\n\n  if (manifest2?.extra?.expoGo?.developer) {\n    const baseUrl = new URL(`http://${manifest2.extra.expoGo.debuggerHost}`);\n    baseUrl.set('pathname', meta.httpServerLocation + suffix);\n\n    return {\n      uri: baseUrl.href,\n      hash,\n    };\n  }\n\n  // For assets during development, we use the development server's URL origin\n  if (getManifest().developer) {\n    const baseUrl = new URL(getManifest().bundleUrl);\n    baseUrl.set('pathname', meta.httpServerLocation + suffix);\n    return { uri: baseUrl.href, hash };\n  }\n\n  // Production CDN URIs are based on each asset file hash\n  return {\n    uri: `https://classic-assets.eascdn.net/~assets/${encodeURIComponent(hash)}`,\n    hash,\n  };\n}\n\n/**\n * Resolves the given URI to an absolute URI. If the given URI is already an absolute URI, it is\n * simply returned. Otherwise, if it is a relative URI, it is resolved relative to the manifest's\n * base URI.\n */\nexport function resolveUri(uri: string): string {\n  if (!manifestBaseUrl) {\n    return uri;\n  }\n\n  const { protocol } = new URL(uri);\n  if (protocol !== '') {\n    return uri;\n  }\n\n  const baseUrl = new URL(manifestBaseUrl);\n  const resolvedPath = uri.startsWith('/') ? uri : path.join(baseUrl.pathname, uri);\n  baseUrl.set('pathname', resolvedPath);\n  return baseUrl.href;\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}