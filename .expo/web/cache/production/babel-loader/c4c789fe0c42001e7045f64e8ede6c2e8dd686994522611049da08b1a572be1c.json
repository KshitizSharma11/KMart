{"ast":null,"code":"import _slicedToArray from\"@babel/runtime/helpers/slicedToArray\";import{useEffect,useState}from'react';import{loadAsync}from\"./Font\";export function useFonts(map){var _useState=useState(false),_useState2=_slicedToArray(_useState,2),loaded=_useState2[0],setLoaded=_useState2[1];var _useState3=useState(null),_useState4=_slicedToArray(_useState3,2),error=_useState4[0],setError=_useState4[1];useEffect(function(){loadAsync(map).then(function(){return setLoaded(true);}).catch(setError);},[]);return[loaded,error];}","map":{"version":3,"names":["useEffect","useState","loadAsync","useFonts","map","_useState","_useState2","_slicedToArray","loaded","setLoaded","_useState3","_useState4","error","setError","then","catch"],"sources":["C:\\Users\\hp\\OneDrive\\Desktop\\react\\ecommerce\\Ecom\\node_modules\\expo-font\\src\\FontHooks.ts"],"sourcesContent":["import { useEffect, useState } from 'react';\n\nimport { loadAsync } from './Font';\nimport { FontSource } from './Font.types';\n\n// @needsAudit\n/**\n * ```ts\n * const [loaded, error] = useFonts({ ... });\n * ```\n * Load a map of fonts with [`loadAsync`](#loadasync). This returns a `boolean` if the fonts are\n * loaded and ready to use. It also returns an error if something went wrong, to use in development.\n *\n * > Note, the fonts are not \"reloaded\" when you dynamically change the font map.\n *\n * @param map A map of `fontFamily`s to [`FontSource`](#fontsource)s. After loading the font you can\n * use the key in the `fontFamily` style prop of a `Text` element.\n *\n * @return\n * - __loaded__ (`boolean`) - A boolean to detect if the font for `fontFamily` has finished\n * loading.\n * - __error__ (`Error | null`) - An error encountered when loading the fonts.\n */\nexport function useFonts(map: string | Record<string, FontSource>): [boolean, Error | null] {\n  const [loaded, setLoaded] = useState(false);\n  const [error, setError] = useState<Error | null>(null);\n\n  useEffect(() => {\n    loadAsync(map)\n      .then(() => setLoaded(true))\n      .catch(setError);\n  }, []);\n\n  return [loaded, error];\n}\n"],"mappings":"iEAAA,OAASA,SAAS,CAAEC,QAAQ,KAAQ,OAAO,CAE3C,OAASC,SAAS,cAqBlB,MAAM,SAAU,CAAAC,QAAQA,CAACC,GAAwC,EAC/D,IAAAC,SAAA,CAA4BJ,QAAQ,CAAC,KAAK,CAAC,CAAAK,UAAA,CAAAC,cAAA,CAAAF,SAAA,IAApCG,MAAM,CAAAF,UAAA,IAAEG,SAAS,CAAAH,UAAA,IACxB,IAAAI,UAAA,CAA0BT,QAAQ,CAAe,IAAI,CAAC,CAAAU,UAAA,CAAAJ,cAAA,CAAAG,UAAA,IAA/CE,KAAK,CAAAD,UAAA,IAAEE,QAAQ,CAAAF,UAAA,IAEtBX,SAAS,CAAC,UAAK,CACbE,SAAS,CAACE,GAAG,CAAC,CACXU,IAAI,CAAC,iBAAM,CAAAL,SAAS,CAAC,IAAI,CAAC,GAAC,CAC3BM,KAAK,CAACF,QAAQ,CAAC,CACpB,CAAC,CAAE,EAAE,CAAC,CAEN,MAAO,CAACL,MAAM,CAAEI,KAAK,CAAC,CACxB"},"metadata":{},"sourceType":"module","externalDependencies":[]}